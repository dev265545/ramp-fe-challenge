{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\"; // import { useEmployees } from \"./useEmployees\"\n\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const [employees, setEmployees] = useState(null); // const { data: employees } = useEmployees()\n\n  const fetchAll = useCallback(async () => {\n    const [transactionsResponse, employeesResponse] = await Promise.all([fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    }), fetchWithCache(\"employees\")]);\n    setPaginatedTransactions(previousResponse => {\n      if (transactionsResponse === null || previousResponse === null) {\n        return transactionsResponse;\n      }\n\n      return {\n        data: transactionsResponse.data,\n        nextPage: transactionsResponse.nextPage\n      };\n    });\n    setEmployees(employeesResponse);\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading: loading || !employees,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"4S0KNT+hlmK8u8t0lFf9yYA7Nac=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","employees","setEmployees","fetchAll","transactionsResponse","employeesResponse","Promise","all","page","nextPage","previousResponse","data","invalidateData"],"sources":["C:/Users/Dev/Desktop/convintassk/New folder/myproject/myapp/ramp-fe-challenge/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { Employee, PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n// import { useEmployees } from \"./useEmployees\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n\n  // const { data: employees } = useEmployees()\n\nconst fetchAll = useCallback(async () => {\n  const [transactionsResponse, employeesResponse] = await Promise.all([\n    fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n    }),\n    fetchWithCache<Employee[]>(\"employees\"),\n  ])\n\n  setPaginatedTransactions((previousResponse) => {\n    if (transactionsResponse === null || previousResponse === null) {\n      return transactionsResponse\n    }\n\n    return { data: transactionsResponse.data, nextPage: transactionsResponse.nextPage }\n  })\n\n  setEmployees(employeesResponse)\n}, [fetchWithCache, paginatedTransactions])\n\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading: loading || !employees, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAGA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAoB,IAApB,CAA1C,CALsE,CAOtE;;EAEF,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvC,MAAM,CAACW,oBAAD,EAAuBC,iBAAvB,IAA4C,MAAMC,OAAO,CAACC,GAAR,CAAY,CAClEV,cAAc,CAA2D,uBAA3D,EAAoF;MAChGW,IAAI,EAAET,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACU;IAD+B,CAApF,CADoD,EAIlEZ,cAAc,CAAa,WAAb,CAJoD,CAAZ,CAAxD;IAOAG,wBAAwB,CAAEU,gBAAD,IAAsB;MAC7C,IAAIN,oBAAoB,KAAK,IAAzB,IAAiCM,gBAAgB,KAAK,IAA1D,EAAgE;QAC9D,OAAON,oBAAP;MACD;;MAED,OAAO;QAAEO,IAAI,EAAEP,oBAAoB,CAACO,IAA7B;QAAmCF,QAAQ,EAAEL,oBAAoB,CAACK;MAAlE,CAAP;IACD,CANuB,CAAxB;IAQAP,YAAY,CAACG,iBAAD,CAAZ;EACD,CAjB2B,EAiBzB,CAACR,cAAD,EAAiBE,qBAAjB,CAjByB,CAA5B;EAoBE,MAAMa,cAAc,GAAGnB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEW,IAAI,EAAEZ,qBAAR;IAA+BD,OAAO,EAAEA,OAAO,IAAI,CAACG,SAApD;IAA+DE,QAA/D;IAAyES;EAAzE,CAAP;AACD;;GAlCehB,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}