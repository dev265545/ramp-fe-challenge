{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const fetchAll = useCallback(async () => {\n    const employeesData = await fetchWithCache(\"employees\");\n    setEmployees(employeesData);\n    setLoaded(true); // set loaded to true once data is available\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n    setLoaded(false); // set loaded to false when invalidating data\n  }, []);\n  return {\n    data: employees,\n    loading: !loaded || loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(useEmployees, \"zDsdsYIE3v/Ld9wiS31vQUMB/XQ=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useEmployees","fetchWithCache","loading","employees","setEmployees","loaded","setLoaded","fetchAll","employeesData","invalidateData","data"],"sources":["C:/Users/Dev/Desktop/convintassk/New folder/myproject/myapp/ramp-fe-challenge/ramp-fe-challenge/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { Employee } from \"../utils/types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { EmployeeResult } from \"./types\"\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n  const [loaded, setLoaded] = useState(false)\n\n  const fetchAll = useCallback(async () => {\n    const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n\n    setEmployees(employeesData)\n    setLoaded(true) // set loaded to true once data is available\n  }, [fetchWithCache])\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null)\n    setLoaded(false) // set loaded to false when invalidating data\n  }, [])\n\n  return { data: employees, loading: !loaded || loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EAEA,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvC,MAAMW,aAAa,GAAG,MAAMP,cAAc,CAAa,WAAb,CAA1C;IAEAG,YAAY,CAACI,aAAD,CAAZ;IACAF,SAAS,CAAC,IAAD,CAAT,CAJuC,CAIvB;EACjB,CAL2B,EAKzB,CAACL,cAAD,CALyB,CAA5B;EAOA,MAAMQ,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACvCO,YAAY,CAAC,IAAD,CAAZ;IACAE,SAAS,CAAC,KAAD,CAAT,CAFuC,CAEtB;EAClB,CAHiC,EAG/B,EAH+B,CAAlC;EAKA,OAAO;IAAEI,IAAI,EAAEP,SAAR;IAAmBD,OAAO,EAAE,CAACG,MAAD,IAAWH,OAAvC;IAAgDK,QAAhD;IAA0DE;EAA1D,CAAP;AACD;;GAlBeT,Y;UACsBD,c"},"metadata":{},"sourceType":"module"}