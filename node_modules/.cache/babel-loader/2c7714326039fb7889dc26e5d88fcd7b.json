{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const [loadingEmployees, setLoadingEmployees] = useState(false); // add new state\n\n  const [initialLoad, setInitialLoad] = useState(false);\n  const fetchAll = useCallback(async () => {\n    if (!initialLoad) {\n      const employeesData = await fetchWithCache(\"employees\");\n      setEmployees(employeesData);\n      setInitialLoad(true);\n    }\n  }, [fetchWithCache, initialLoad]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n  return {\n    data: employees,\n    loading: loadingEmployees,\n    fetchAll,\n    invalidateData\n  }; // update return statement\n}\n\n_s(useEmployees, \"WlAAeqUFOpJGeukgwUd6dxNQX4g=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useEmployees","fetchWithCache","employees","setEmployees","loadingEmployees","setLoadingEmployees","initialLoad","setInitialLoad","fetchAll","employeesData","invalidateData","data","loading"],"sources":["C:/Users/Dev/Desktop/convintassk/New folder/myproject/myapp/ramp-fe-challenge/ramp-fe-challenge/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { Employee } from \"../utils/types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { EmployeeResult } from \"./types\"\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache } = useCustomFetch()\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n  const [loadingEmployees, setLoadingEmployees] = useState<boolean>(false) // add new state\n  const [initialLoad, setInitialLoad] = useState(false)\nconst fetchAll = useCallback(async () => {\n  if (!initialLoad) {\n    const employeesData = await fetchWithCache<Employee[]>(\"employees\");\n    setEmployees(employeesData);\n    setInitialLoad(true);\n  }\n}, [fetchWithCache, initialLoad]);\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null)\n  }, [])\n\n  return { data: employees, loading: loadingEmployees, fetchAll, invalidateData } // update return statement\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC;EAAF,IAAqBF,cAAc,EAAzC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAU,KAAV,CAAxD,CAH6C,CAG4B;;EACzE,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;EACF,MAAMU,QAAQ,GAAGX,WAAW,CAAC,YAAY;IACvC,IAAI,CAACS,WAAL,EAAkB;MAChB,MAAMG,aAAa,GAAG,MAAMR,cAAc,CAAa,WAAb,CAA1C;MACAE,YAAY,CAACM,aAAD,CAAZ;MACAF,cAAc,CAAC,IAAD,CAAd;IACD;EACF,CAN2B,EAMzB,CAACN,cAAD,EAAiBK,WAAjB,CANyB,CAA5B;EAQE,MAAMI,cAAc,GAAGb,WAAW,CAAC,MAAM;IACvCM,YAAY,CAAC,IAAD,CAAZ;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEQ,IAAI,EAAET,SAAR;IAAmBU,OAAO,EAAER,gBAA5B;IAA8CI,QAA9C;IAAwDE;EAAxD,CAAP,CAjB6C,CAiBmC;AACjF;;GAlBeV,Y;UACaD,c"},"metadata":{},"sourceType":"module"}